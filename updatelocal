#!/bin/bash

trap 'echo "Cleaning up..."; UL_cleanup; return 0' SIGINT
cores=$(nproc)
#support for disabling auto-ls when terminal is not dolphin, already disabled otherwise
[ -n "$isdolphin" ] && { $isdolphin || zplugin unload -q desyncr/auto-ls; }
cache=$UPDATELOCAL_GITDIR

if [[ $UPDATELOCAL_GITDIR != "$PWD" ]]; then popit="set"; fi
if [[ $1 = "-p" || $1 = "--pwd" || $2 = "-p" || $2 = "--pwd" || $1 = "-r" || $1 = "--repull" ]]; then
  unset popit
  UPDATELOCAL_GITDIR=$PWD
fi

cd $UPDATELOCAL_GITDIR || { echo "Error cd-ing into '$UPDATELOCAL_GITDIR', is it a real directory?" && return 1; }
ls
echo ""

UL_loadautols(){
  zplugin ice load'[[ $isdolphin ]]' lucid
  zplugin load desyncr/auto-ls
}

UL_cleanup(){
  zplugin status desyncr/auto-ls &>/dev/null && { UL_loadautols; if [[ -n $popit ]]; then cd - 2> /dev/null; fi; }
  unfunction UL_loadautols UL_changelogs UL_checkupdates UL_fetchupdates UL_recentcommits UL_connected
  unset cores cache hidden popit UPSTREAM REMOTE
}

UL_fetchupdates(){
  if [ -d .git ]; then
    echo "Fetching $(basename $PWD)..."
    git fetch -j $cores 2>&1
  fi
}

UL_checkupdates(){
  if [ -d .git ]; then
    local UPSTREAM LOCAL REMOTE BASE gitname
    UPSTREAM=${1:-'@{u}'}
    LOCAL=$(git rev-parse @)
    REMOTE=$(git rev-parse "$UPSTREAM" 2>/dev/null)
    BASE=$(git merge-base @ "$UPSTREAM" 2>/dev/null)
    gitname=$(basename $PWD)

    if [ -z $BASE ] || [ -z $REMOTE ]; then
      echo -e "\e[00;31mCustom commit checked out $gitname\e[00m"
    elif [ $LOCAL = $REMOTE ]; then
      [ $hidden ] || echo "Up-to-date $gitname"
    elif [ $LOCAL = $BASE ]; then
      echo -e "\e[00;31mNeed to pull $gitname\e[00m"
    elif [ $REMOTE = $BASE ]; then
      [ $hidden ] || echo -e "\e[00;31mNeed to push $gitname\e[00m"
    else
      echo -e "\e[00;31mDiverged $gitname\e[00m"
    fi
  fi
}

UL_changelogs(){
  if [ -d .git ]; then
    local currentbranch tracked_remote changes
    currentbranch=$(git_current_branch)
    tracked_remote=$(git config "branch.$currentbranch.remote")
    if [ -z "$currentbranch" ] || [ -z "$(UPSTREAM=${1:-'@{u}'}; git rev-parse "$UPSTREAM" 2>/dev/null)" ] ; then return; fi
    changes=$(git log "$currentbranch".."$tracked_remote"/"$currentbranch")

    if [ $changes ]; then echo "BEGIN===================================================="
    echo "$PWD"; fi
    git log --color=always --graph --pretty='''%Cred%h%Creset -%C(auto)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset''' --stat "$currentbranch".."$tracked_remote"/"$currentbranch"
    if [ $changes ]; then echo "$PWD"; echo "======================================================END"
    echo ""; fi
  fi
}

# Borrowed from zplugin
UL_recentcommits(){
  setopt localoptions extendedglob nokshglob noksharrays noshwordsplit
  local nl=$'\n' escape=$'\x1b['
  local -a lines

  lines=( ${(f)"$(command git log --color --date=short --pretty=format:'%Cgreen%cd %h %Creset%s %Cred%d%Creset || %b' ..FETCH_HEAD)"} )
  if (( ${#lines} > 0 )); then
    # Remove the (origin/master ...) segments, to expect only tags to appear
    lines=( "${(S)lines[@]//\(([,[:blank:]]#(origin|HEAD|master)[^a-zA-Z]##(HEAD|origin|master)[,[:blank:]]#)#\)/}" )
    # Remove " ||" if it ends the line (i.e. no additional text from the body)
    lines=( "${lines[@]/ \|\|[[:blank:]]#(#e)/}" )
    # If there's no ref-name, 2 consecutive spaces occur - fix this
    lines=( "${lines[@]/(#b)[[:space:]]#\|\|[[:space:]]#(*)(#e)/|| ${match[1]}}" )
    lines=( "${lines[@]/(#b)$escape([0-9]##)m[[:space:]]##${escape}m/$escape${match[1]}m${escape}m}" )
    # Replace what follows "|| ..." with the same thing but with no newlines,
    # and also only first 10 words (the (w)-flag enables word-indexing)
    lines=( "${lines[@]/(#b)[[:blank:]]#\|\|(*)(#e)/| ${${match[1]//$nl/ }[(w)1,(w)10]}}" )
  fi
  git pull -j $cores
  builtin print -rl -- "${lines[@]}" | command less -FRXi
}

UL_connected(){
  ping -q -w 1 -c 1 $(ip r | grep default | cut -d ' ' -f 3) &> /dev/null && return 0 || { echo "You're not connected to the internet"; return 1; }
}

case $1 in
  --changes )
    hidden=true
    { for d in ./*/ ; do (builtin cd "$d" && UL_checkupdates); done
    echo ""
    for d in ./*/ ; do (builtin cd "$d" && UL_changelogs); done } | less -R
    ;;
  --repull | -r )
    shift 1
    UPSTREAM=${1:-'@{u}'}
    REMOTE=$(git rev-parse "$UPSTREAM" 2>/dev/null)
    if [[ -z $REMOTE ]]; then echo "Commit checked out, pull manually"; UL_loadautols; return; fi

    echo "Assuming --pwd"
    echo "Are you sure you want to repull $PWD? [y/n]"
    read key
    if [ "$key" = "y" ] && UL_connected; then
      git reset --hard
      git clean -fdx
      UL_recentcommits
      echo ""
    fi
    ;;
  * )
    echo "Fetching latest updates..."
    UL_connected && (for d in ./*/ ; do (builtin cd "$d" && UL_fetchupdates) & done | GREP_COLORS='ms=1;34' grep -E --color '.*From.*|$'; wait)
    echo ""
    for d in ./*/ ; do (builtin cd "$d" && UL_checkupdates); done
    echo ""
    ;;
esac

UPDATELOCAL_GITDIR=$cache
if [[ -n $popit ]]; then cd - 2> /dev/null; fi

UL_cleanup
